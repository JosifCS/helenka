generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  hash        String   @db.VarChar(127)
  email       String   @unique @db.VarChar(255)
  token       Token?
  statements  Statement[]
  files       File[]

  @@map("users")
}

model Token {
    id         Int      @id @default(autoincrement())
    createdAt  DateTime @default(now())
    valid      Boolean  @default(true)
    expiration DateTime
    user       User     @relation(fields: [userId], references: [id])
    userId     Int      @unique

    @@map("tokens")
}

model Statement {
    id          Int       @id @default(autoincrement())
    name        String    @db.VarChar(100)
    description String    @db.Text()
    version     Int       @db.SmallInt
    broker      Int       @db.SmallInt
    rateType    Boolean   @default(false)
    lastChecks  Boolean   @default(false)
    from        DateTime
    to          DateTime
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    createdBy   User      @relation(fields: [createdById], references: [id], onUpdate: NoAction)
    createdById Int
    file        File?

    @@map("statements")
}

model File {
    id          Int       @id @default(autoincrement())
    name        String
    uuid        String
    type        String
    path        String
    createdAt   DateTime  @default(now())
    createdBy   User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    userId      Int
    statement   Statement @relation(fields: [statementId], references: [id])
    statementId Int       @unique
    
    @@map("files")
}